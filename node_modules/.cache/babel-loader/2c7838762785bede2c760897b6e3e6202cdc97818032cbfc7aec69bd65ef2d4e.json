{"ast":null,"code":"var _jsxFileName = \"/home/sandro/Desktop/todo/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useReducer, useRef } from \"react\";\nimport \"./App.css\";\nimport TodoItem from \"./components/toDoITem/TodoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TASKS = [];\nfunction reducer(state, action) {\n  const copy = [...state];\n  switch (action.type) {\n    case \"CHANGE_STATUS\":\n      action.id ? copy[action.id].isDone = !copy[action.id].isDone : new Error();\n      return copy;\n    case \"ADD_TASK\":\n      action.task ? copy.push({\n        id: copy.length,\n        task: action.task,\n        isDone: false\n      }) : new Error();\n      return copy;\n    case \"DELETE_TASK\":\n      action.id ? copy.splice(action.id, 1) : new Error();\n      return copy;\n    default:\n      throw new Error();\n  }\n}\nfunction App() {\n  _s();\n  const [value, setValue] = useState(\"\");\n  const [showTasks, setShowTasks] = useState(\"All\");\n  const inputRef = useRef(null);\n  function filter(task) {\n    if (showTasks === \"Completed\") {\n      if (task.isDone) {\n        return /*#__PURE__*/_jsxDEV(TodoItem, {\n          TASKS: TASKS,\n          dispatch: dispatch,\n          id: task.id,\n          task: task.task,\n          isDone: task.isDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this);\n      }\n    } else if (showTasks === \"Incomplete\") {\n      if (!task.isDone) {\n        return /*#__PURE__*/_jsxDEV(TodoItem, {\n          TASKS: TASKS,\n          dispatch: dispatch,\n          id: task.id,\n          task: task.task,\n          isDone: task.isDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this);\n      }\n    }\n  }\n  const [state, dispatch] = useReducer(reducer, TASKS);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: \"TODO LIST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divDef\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: showTasks,\n        onChange: event => {\n          setShowTasks(event.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Incomplete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskContainer\",\n      children: state.map(task => {\n        if (showTasks !== \"All\") {\n          return filter(task);\n        }\n        return /*#__PURE__*/_jsxDEV(TodoItem, {\n          TASKS: TASKS,\n          dispatch: dispatch,\n          id: task.id,\n          task: task.task,\n          isDone: task.isDone\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"inputContainer\",\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"input\",\n        ref: inputRef,\n        value: value,\n        onChange: event => setValue(event.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"addBtn\",\n        onClick: () => {\n          inputRef.current && dispatch({\n            task: value,\n            type: \"ADD_TASK\"\n          });\n          setValue(\"\");\n        },\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"7YIbYGlcu3gz+aQjINNNK+RHe4c=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useReducer","useRef","TodoItem","TASKS","reducer","state","action","copy","type","id","isDone","Error","task","push","length","splice","App","value","setValue","showTasks","setShowTasks","inputRef","filter","dispatch","event","target","map","current"],"sources":["/home/sandro/Desktop/todo/src/App.tsx"],"sourcesContent":["import React, { useState, useReducer, useRef, HtmlHTMLAttributes } from \"react\";\nimport \"./App.css\";\nimport TodoItem from \"./components/toDoITem/TodoItem\";\n\ninterface TaskInterface {\n  id: number;\n  task: string;\n  isDone: boolean;\n}\n\ninterface actionType {\n  type: string;\n  id?: number;\n  task?: string;\n}\n\nconst TASKS:TaskInterface[] = [\n\n];\n\ntype state = typeof TASKS;\n\nfunction reducer(state: state, action: actionType) {\n  const copy = [...state];\n  switch (action.type) {\n    case \"CHANGE_STATUS\":\n      action.id\n        ? (copy[action.id].isDone = !copy[action.id].isDone)\n        : new Error();\n      return copy;\n    case \"ADD_TASK\":\n      action.task\n        ? copy.push({ id: copy.length, task: action.task, isDone: false })\n        : new Error();\n      return copy;\n    case \"DELETE_TASK\":\n      action.id ? copy.splice(action.id, 1): new Error();\n      return copy  \n    default:\n      throw new Error();\n  }\n}\n\nfunction App() {\n  const [value, setValue] = useState(\"\");\n  const [showTasks, setShowTasks] = useState(\"All\");\n  const inputRef = useRef<HTMLInputElement>(null);\n  function filter(task: TaskInterface) {\n    if (showTasks === \"Completed\") {\n      if (task.isDone) {\n        return (\n          <TodoItem\n            TASKS={TASKS}\n            dispatch={dispatch}\n            id={task.id}\n            task={task.task}\n            isDone={task.isDone}\n          />\n        );\n      }\n    } else if (showTasks === \"Incomplete\") {\n      if (!task.isDone) {\n        return (\n          <TodoItem\n            TASKS={TASKS}\n            dispatch={dispatch}\n            id={task.id}\n            task={task.task}\n            isDone={task.isDone}\n          />\n        );\n      }\n    }\n  }\n\n  const [state, dispatch] = useReducer(reducer, TASKS);\n  return (\n    <div className=\"App\">\n      <header className=\"header\">TODO LIST</header>\n      <div className=\"divDef\">\n        <select\n          value={showTasks}\n          onChange={(event) => {\n            setShowTasks(event.target.value);\n          }}\n        >\n          <option>All</option>\n          <option>Completed</option>\n          <option>Incomplete</option>\n        </select>\n      </div>\n      <div className=\"taskContainer\">\n        {state.map((task) => {\n          if (showTasks !== \"All\") {\n            return filter(task);\n          }\n\n          return (\n            <TodoItem\n              TASKS={TASKS}\n              dispatch={dispatch}\n              id={task.id}\n              task={task.task}\n              isDone={task.isDone}\n            />\n          );\n        })}\n      </div>\n      <div className=\"inputContainer\">\n        <input\n          className=\"input\"\n          ref={inputRef}\n          value={value}\n          onChange={(event) => setValue(event.target.value)}\n        ></input>\n        <button\n          className=\"addBtn\"\n          onClick={() => {\n            inputRef.current && dispatch({ task: value, type: \"ADD_TASK\" });\n            setValue(\"\")\n          }}\n        >\n          Add Task\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}