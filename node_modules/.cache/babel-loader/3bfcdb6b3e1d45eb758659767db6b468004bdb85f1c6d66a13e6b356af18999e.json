{"ast":null,"code":"import _slicedToArray from\"/home/sandro/Desktop/TODO/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _toConsumableArray from\"/home/sandro/Desktop/TODO/node_modules/@babel/runtime/helpers/esm/toConsumableArray.js\";import React,{useState,useReducer,useRef}from\"react\";import\"./App.css\";import TodoItem from\"./components/toDoITem/TodoItem\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TASKS=[{task:\"TASK 1111111111111111111111111111111111111111\",isDone:false}];function reducer(state,action){var copy=_toConsumableArray(state);switch(action.type){case\"CHANGE_STATUS\":copy.map(function(task){if(task.task===action.task){task.isDone=!task.isDone;}});return copy;case\"ADD_TASK\":var taskList=[];copy.map(function(task){taskList.push(task.task);});if(!taskList.includes(action.task)){action.task&&copy.push({task:action.task,isDone:false});}return copy;case\"DELETE_TASK\":copy=copy.filter(function(task){return task.task!==action.task;});return copy;default:throw new Error();}}function App(){var _useState=useState(\"\"),_useState2=_slicedToArray(_useState,2),value=_useState2[0],setValue=_useState2[1];var _useState3=useState(\"All\"),_useState4=_slicedToArray(_useState3,2),showTasks=_useState4[0],setShowTasks=_useState4[1];var inputRef=useRef(null);function filter(task){if(showTasks===\"Completed\"){if(task.isDone){return/*#__PURE__*/_jsx(TodoItem,{TASKS:TASKS,dispatch:dispatch,task:task.task,isDone:task.isDone});}else{return/*#__PURE__*/_jsx(\"h4\",{children:\"No completed tasks\"});}}else if(showTasks===\"Incomplete\"){if(!task.isDone){return/*#__PURE__*/_jsx(TodoItem,{TASKS:TASKS,dispatch:dispatch,task:task.task,isDone:task.isDone});}else{return/*#__PURE__*/_jsx(\"h4\",{children:\"No incomplete tasks\"});}}}var _useReducer=useReducer(reducer,TASKS),_useReducer2=_slicedToArray(_useReducer,2),state=_useReducer2[0],dispatch=_useReducer2[1];// console.log(state)\nreturn/*#__PURE__*/_jsxs(\"div\",{className:\"App\",children:[/*#__PURE__*/_jsx(\"header\",{className:\"header\",children:\"TODO LIST\"}),/*#__PURE__*/_jsx(\"div\",{className:\"divDef\",children:/*#__PURE__*/_jsxs(\"select\",{value:showTasks,onChange:function onChange(event){setShowTasks(event.target.value);},children:[/*#__PURE__*/_jsx(\"option\",{children:\"All\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Completed\"}),/*#__PURE__*/_jsx(\"option\",{children:\"Incomplete\"})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"taskContainer\",children:state.length!=0?state.map(function(task){if(showTasks!==\"All\"){return filter(task);}return/*#__PURE__*/_jsx(TodoItem,{TASKS:TASKS,dispatch:dispatch,task:task.task,isDone:task.isDone});}):/*#__PURE__*/_jsx(\"h4\",{children:\"No tasks\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"inputContainer\",children:[/*#__PURE__*/_jsx(\"input\",{className:\"input\",ref:inputRef,value:value,onChange:function onChange(event){return setValue(event.target.value);}}),/*#__PURE__*/_jsx(\"button\",{className:\"addBtn\",onClick:function onClick(){inputRef.current&&dispatch({task:value,type:\"ADD_TASK\"});setValue(\"\");},children:\"Add Task\"})]})]});}export default App;","map":{"version":3,"names":["React","useState","useReducer","useRef","TodoItem","TASKS","task","isDone","reducer","state","action","copy","type","map","taskList","push","includes","filter","Error","App","value","setValue","showTasks","setShowTasks","inputRef","dispatch","event","target","length","current"],"sources":["/home/sandro/Desktop/TODO/src/App.tsx"],"sourcesContent":["import React, { useState, useReducer, useRef, HtmlHTMLAttributes } from \"react\";\nimport \"./App.css\";\nimport TodoItem from \"./components/toDoITem/TodoItem\";\n\ninterface TaskInterface {\n  task: string;\n  isDone: boolean;\n}\n\ninterface actionType {\n  type: string;\n  task: string;\n}\n\nconst TASKS: TaskInterface[] = [\n  {\n    task:\"TASK 1111111111111111111111111111111111111111\",\n    isDone:false\n  }\n];\n\ntype state = typeof TASKS;\n\nfunction reducer(state: state, action: actionType) {\n  let copy = [...state];\n  switch (action.type) {\n    case \"CHANGE_STATUS\":\n      copy.map((task) => {\n        if (task.task === action.task) {\n          task.isDone = !task.isDone;\n        }\n      });\n\n      return copy;\n    case \"ADD_TASK\":\n      let taskList: string[] = [];\n      copy.map((task) => {\n        taskList.push(task.task);\n      });\n      if (!taskList.includes(action.task)) {\n        action.task && copy.push({ task: action.task, isDone: false });\n      }\n\n      return copy;\n    case \"DELETE_TASK\":\n      copy = copy.filter((task) => task.task !== action.task);\n      return copy;\n    default:\n      throw new Error();\n  }\n}\n\nfunction App() {\n  const [value, setValue] = useState(\"\");\n  const [showTasks, setShowTasks] = useState(\"All\");\n  const inputRef = useRef<HTMLInputElement>(null);\n  function filter(task: TaskInterface) {\n    if (showTasks === \"Completed\") {\n      if (task.isDone) {\n        return (\n          <TodoItem\n            TASKS={TASKS}\n            dispatch={dispatch}\n            task={task.task}\n            isDone={task.isDone}\n          />\n        );\n      } else {\n        return <h4>No completed tasks</h4>\n      }\n    } else if (showTasks === \"Incomplete\") {\n      if (!task.isDone) {\n        return (\n          <TodoItem\n            TASKS={TASKS}\n            dispatch={dispatch}\n            task={task.task}\n            isDone={task.isDone}\n          />\n        );\n      } else {\n        return <h4>No incomplete tasks</h4>\n      }\n    }\n  }\n  const [state, dispatch] = useReducer(reducer, TASKS);\n\n  // console.log(state)\n  return (\n    <div className=\"App\">\n      <header className=\"header\">TODO LIST</header>\n      <div className=\"divDef\">\n        <select\n          value={showTasks}\n          onChange={(event) => {\n            setShowTasks(event.target.value);\n          }}\n        >\n          <option>All</option>\n          <option>Completed</option>\n          <option>Incomplete</option>\n        </select>\n      </div>\n      <div className=\"taskContainer\">\n        {state.length != 0 ? (\n          state.map((task) => {\n            if (showTasks !== \"All\") {\n              return filter(task);\n            }\n\n            return (\n              <TodoItem\n                TASKS={TASKS}\n                dispatch={dispatch}\n                task={task.task}\n                isDone={task.isDone}\n              />\n            );\n          })\n        ) : (\n          <h4>No tasks</h4>\n        )}\n      </div>\n      <div className=\"inputContainer\">\n        <input\n          className=\"input\"\n          ref={inputRef}\n          value={value}\n          onChange={(event) => setValue(event.target.value)}\n        ></input>\n        <button\n          className=\"addBtn\"\n          onClick={() => {\n            inputRef.current && dispatch({ task: value, type: \"ADD_TASK\" });\n            setValue(\"\");\n          }}\n        >\n          Add Task\n        </button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}