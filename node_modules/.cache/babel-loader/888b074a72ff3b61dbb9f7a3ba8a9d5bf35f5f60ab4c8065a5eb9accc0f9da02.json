{"ast":null,"code":"var _jsxFileName = \"/home/sandro/Desktop/todo/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport TodoItem from \"./components/toDoITem/TodoItem\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TASKS = [{\n  id: 0,\n  task: \"TASK1\",\n  isDone: false\n}, {\n  id: 1,\n  task: \"TASK2\",\n  isDone: true\n}];\nfunction reducer(state, action) {\n  const copy = {\n    ...state\n  };\n  switch (action.type) {\n    case \"CHANGE_STATUS\":\n      console.log(\"hello\");\n      copy[action.id].isDone = !copy[action.id].isDone;\n      return copy;\n    default:\n      throw new Error();\n  }\n}\nfunction App() {\n  _s();\n  const [TASKS, setTASKS] = useState([{\n    id: 0,\n    task: \"TASK1\",\n    isDone: false\n  }, {\n    id: 1,\n    task: \"TASK2\",\n    isDone: true\n  }]);\n  console.log(TASKS);\n  const [showTasks, setShowTasks] = useState(\"All\");\n  // const [state, dispatch] = useReducer(reducer, TASKS);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"header\", {\n      className: \"header\",\n      children: \"TODO LIST\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divDef\",\n      children: /*#__PURE__*/_jsxDEV(\"select\", {\n        value: showTasks,\n        onChange: event => {\n          setShowTasks(event.target.value);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"All\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Completed\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n          children: \"Incomplete\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"taskContainer\",\n      children: Array.isArray(TASKS) && TASKS.map(task => /*#__PURE__*/_jsxDEV(TodoItem, {\n        TASKS: TASKS,\n        setTASKS: setTASKS,\n        id: task.id,\n        task: task.task,\n        isDone: task.isDone\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"divDef\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"addBtn\",\n        children: \"Add Task\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"H3NAaBV/rOox6WYn7MZuGN+bDdk=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","TodoItem","TASKS","id","task","isDone","reducer","state","action","copy","type","console","log","Error","App","setTASKS","showTasks","setShowTasks","event","target","value","Array","isArray","map"],"sources":["/home/sandro/Desktop/todo/src/App.tsx"],"sourcesContent":["import React, { useState, useReducer } from \"react\";\nimport \"./App.css\";\nimport TodoItem from \"./components/toDoITem/TodoItem\";\n\ninterface TaskInterface {\n  id: number;\n  task: string;\n  isDone: boolean;\n}\n\ninterface actionType {\n  type: string;\n  id: number;\n}\n\nconst TASKS = [\n  {\n    id: 0,\n    task: \"TASK1\",\n    isDone: false,\n  },\n  {\n    id: 1,\n    task: \"TASK2\",\n    isDone: true,\n  },\n];\n\ntype state = typeof TASKS;\n\nfunction reducer(state: state, action: actionType) {\n  const copy = { ...state };\n  switch (action.type) {\n    case \"CHANGE_STATUS\":\n      console.log(\"hello\");\n      copy[action.id].isDone = !(copy[action.id].isDone);\n      return copy;\n    default:\n      throw new Error();\n  }\n}\n\nfunction App() {\n  const [TASKS, setTASKS] = useState([\n    {\n      id: 0,\n      task: \"TASK1\",\n      isDone: false,\n    },\n    {\n      id: 1,\n      task: \"TASK2\",\n      isDone: true,\n    },\n  ]);\n\n  console.log(TASKS)\n\n  const [showTasks, setShowTasks] = useState(\"All\");\n  // const [state, dispatch] = useReducer(reducer, TASKS);\n  return (\n    <div className=\"App\">\n      <header className=\"header\">TODO LIST</header>\n      <div className=\"divDef\">\n        <select\n          value={showTasks}\n          onChange={(event) => {\n            setShowTasks(event.target.value);\n          }}\n        >\n          <option>All</option>\n          <option>Completed</option>\n          <option>Incomplete</option>\n        </select>\n      </div>\n      <div className=\"taskContainer\">\n        {Array.isArray(TASKS) && TASKS.map((task) => (\n          <TodoItem\n            TASKS={TASKS}\n            setTASKS={setTASKS}\n            id={task.id}\n            task={task.task}\n            isDone={task.isDone}\n          />\n        ))}\n      </div>\n      <div className=\"divDef\">\n        <button className=\"addBtn\">Add Task</button>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAoB,OAAO;AACnD,OAAO,WAAW;AAClB,OAAOC,QAAQ,MAAM,gCAAgC;AAAC;AAatD,MAAMC,KAAK,GAAG,CACZ;EACEC,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,OAAO;EACbC,MAAM,EAAE;AACV,CAAC,EACD;EACEF,EAAE,EAAE,CAAC;EACLC,IAAI,EAAE,OAAO;EACbC,MAAM,EAAE;AACV,CAAC,CACF;AAID,SAASC,OAAO,CAACC,KAAY,EAAEC,MAAkB,EAAE;EACjD,MAAMC,IAAI,GAAG;IAAE,GAAGF;EAAM,CAAC;EACzB,QAAQC,MAAM,CAACE,IAAI;IACjB,KAAK,eAAe;MAClBC,OAAO,CAACC,GAAG,CAAC,OAAO,CAAC;MACpBH,IAAI,CAACD,MAAM,CAACL,EAAE,CAAC,CAACE,MAAM,GAAG,CAAEI,IAAI,CAACD,MAAM,CAACL,EAAE,CAAC,CAACE,MAAO;MAClD,OAAOI,IAAI;IACb;MACE,MAAM,IAAII,KAAK,EAAE;EAAC;AAExB;AAEA,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACZ,KAAK,EAAEa,QAAQ,CAAC,GAAGf,QAAQ,CAAC,CACjC;IACEG,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,OAAO;IACbC,MAAM,EAAE;EACV,CAAC,EACD;IACEF,EAAE,EAAE,CAAC;IACLC,IAAI,EAAE,OAAO;IACbC,MAAM,EAAE;EACV,CAAC,CACF,CAAC;EAEFM,OAAO,CAACC,GAAG,CAACV,KAAK,CAAC;EAElB,MAAM,CAACc,SAAS,EAAEC,YAAY,CAAC,GAAGjB,QAAQ,CAAC,KAAK,CAAC;EACjD;EACA,oBACE;IAAK,SAAS,EAAC,KAAK;IAAA,wBAClB;MAAQ,SAAS,EAAC,QAAQ;MAAA,UAAC;IAAS;MAAA;MAAA;MAAA;IAAA,QAAS,eAC7C;MAAK,SAAS,EAAC,QAAQ;MAAA,uBACrB;QACE,KAAK,EAAEgB,SAAU;QACjB,QAAQ,EAAGE,KAAK,IAAK;UACnBD,YAAY,CAACC,KAAK,CAACC,MAAM,CAACC,KAAK,CAAC;QAClC,CAAE;QAAA,wBAEF;UAAA,UAAQ;QAAG;UAAA;UAAA;UAAA;QAAA,QAAS,eACpB;UAAA,UAAQ;QAAS;UAAA;UAAA;UAAA;QAAA,QAAS,eAC1B;UAAA,UAAQ;QAAU;UAAA;UAAA;UAAA;QAAA,QAAS;MAAA;QAAA;QAAA;QAAA;MAAA;IACpB;MAAA;MAAA;MAAA;IAAA,QACL,eACN;MAAK,SAAS,EAAC,eAAe;MAAA,UAC3BC,KAAK,CAACC,OAAO,CAACpB,KAAK,CAAC,IAAIA,KAAK,CAACqB,GAAG,CAAEnB,IAAI,iBACtC,QAAC,QAAQ;QACP,KAAK,EAAEF,KAAM;QACb,QAAQ,EAAEa,QAAS;QACnB,EAAE,EAAEX,IAAI,CAACD,EAAG;QACZ,IAAI,EAAEC,IAAI,CAACA,IAAK;QAChB,MAAM,EAAEA,IAAI,CAACC;MAAO;QAAA;QAAA;QAAA;MAAA,QAEvB;IAAC;MAAA;MAAA;MAAA;IAAA,QACE,eACN;MAAK,SAAS,EAAC,QAAQ;MAAA,uBACrB;QAAQ,SAAS,EAAC,QAAQ;QAAA,UAAC;MAAQ;QAAA;QAAA;QAAA;MAAA;IAAS;MAAA;MAAA;MAAA;IAAA,QACxC;EAAA;IAAA;IAAA;IAAA;EAAA,QACF;AAEV;AAAC,GAjDQS,GAAG;AAAA,KAAHA,GAAG;AAmDZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}